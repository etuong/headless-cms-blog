{"version":3,"sources":["../node_modules/ethan-reusable-components/dist/esm lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","pages/Home.js","hooks/useFetch.js","utility/Constants.js","pages/ReviewDetails.js","utility/DateTimeHelper.js","components/Viewport.js","pages/Category.js","components/SiteHeader.js","pages/Dashboard.js","App.js","index.js"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","Home","className","href","target","rel","useFetch","url","useState","data","setData","error","setError","loading","setLoading","useEffect","fetchData","fetch","res","json","require","config","path","process","URL","ReviewDetails","comments","setComments","useParams","attributes","handleCommentSubmission","preventDefault","form","currentTarget","elements","method","headers","body","JSON","stringify","author","name","value","message","review","status","postedComment","reset","console","log","src","image","alt","title","Date","updatedAt","maxstars","rating","color","class","dangerouslySetInnerHTML","__html","length","comment","index","toString","split","slice","join","onSubmit","placeholder","required","type","Viewport","props","isoTimestamp","categories","category","substring","to","avatar","width","height","toLocaleString","Category","query","populate","reviews","encodeValuesOnly","SiteHeader","Dashboard","App","basename","exact","ReactDOM","render","StrictMode","document","getElementById","applyPolyfills","defineCustomElements","window"],"mappings":"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","file":"static/js/main.de1d4e52.chunk.js","sourcesContent":["var map = {\n\t\"./my-rating-component.entry.js\": [\n\t\t65,\n\t\t4\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 63;\nmodule.exports = webpackAsyncContext;","export default function Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <p>\r\n        <b>\r\n          This web app works in conjunction with Strapi to create a full stack\r\n          blogging website.\r\n        </b>\r\n      </p>\r\n\r\n      <p>\r\n        Strapi is a headless CMS (Content Management System). It is useful to\r\n        rapidly create artifacts and assets in a content registry that can\r\n        easily be pulled using RESTful API or GraphQL.\r\n      </p>\r\n\r\n      <p>\r\n        Traditionally, we have CMS like Wordpress that requires a database to\r\n        store content and there's also a presentation layer of template files\r\n        that mix HTML with template tags.\r\n      </p>\r\n\r\n      <p>\r\n        In this type of architecture, the frontend and backend are tighly\r\n        coupled. Both the content and how it's presented are part of the same\r\n        code base (aka monolithic architecture).\r\n      </p>\r\n\r\n      <p>\r\n        You can create blogging contents on my &nbsp;\r\n        <a\r\n          href=\"https://strapi-blogging-server.onrender.com/admin/\"\r\n          target=\"_blank\"\r\n          rel=\"noreferrer\"\r\n        >\r\n          Strapi server\r\n        </a>{\" \"}\r\n        &nbsp;and use my dummy credentials to log in\r\n      </p>\r\n\r\n      <pre>\r\n        <code>\r\n          Email: email@email.com\r\n          <br />\r\n          Password: Password1\r\n        </code>\r\n      </pre>\r\n\r\n      <p>\r\n        To consume data from Strapi and blog here on this client, you'll need to\r\n        create contents in the admin panel under Content Manager.\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n  const [data, setData] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        const res = await fetch(url);\r\n        const json = await res.json();\r\n\r\n        setData(json.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setError(error);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [url]);\r\n\r\n  return { loading, error, data };\r\n};\r\n\r\nexport default useFetch;\r\n","require(\"dotenv\").config({ path: `.env.${process.env.NODE_ENV}` });\r\nexport const URL = process.env.REACT_APP_STRAPI_URL;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport { URL } from \"../utility/Constants\";\r\n\r\nexport default function ReviewDetails() {\r\n  const [comments, setComments] = useState([]);\r\n  const { id } = useParams();\r\n  const { loading, error, data } = useFetch(\r\n    `${URL}/api/reviews/${id}?populate=*`\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (data && data.attributes.comments)\r\n      setComments(data.attributes.comments.data);\r\n  }, [data]);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  let handleCommentSubmission = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const form = e.currentTarget;\r\n      const elements = form.elements;\r\n      let res = await fetch(`${URL}/api/comments`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          data: {\r\n            author: elements.name.value,\r\n            message: elements.message.value,\r\n            review: id,\r\n          },\r\n        }),\r\n      });\r\n\r\n      if (res.status === 200) {\r\n        const postedComment = await res.json();\r\n        setComments([...comments, postedComment.data]);\r\n        form.reset();\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"content-area\">\r\n      <div className=\"blog-post-main-image\">\r\n        <img\r\n          className=\"post-image img-responsive\"\r\n          src={`${data.attributes.image.data.attributes.url}`}\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"blog-post-content\">\r\n        <h1>{data.attributes.title}</h1>\r\n\r\n        <div className=\"entry-meta\">\r\n          <span>\r\n            <i className=\"fa fa-fw fa-clock\"></i>\r\n            {`${new Date(data.attributes.updatedAt)}`}\r\n          </span>\r\n          <span className=\"divider\">|</span>\r\n          <span>\r\n            <i className=\"fa fa-fw fa-user\"></i>\r\n            {data.attributes.author}\r\n          </span>\r\n        </div>\r\n\r\n        <div className=\"entry-meta\">\r\n          Rating:{\" \"}\r\n          <my-rating-component\r\n            maxstars=\"10\"\r\n            rating={data.attributes.rating}\r\n            color=\"red\"\r\n            class=\"ratings\"\r\n          ></my-rating-component>\r\n        </div>\r\n\r\n        <div dangerouslySetInnerHTML={{ __html: data.attributes.body }} />\r\n\r\n        <div className=\"post-comments\">\r\n          <div className=\"block-title\">\r\n            <h3>Comments ({comments.length})</h3>\r\n          </div>\r\n\r\n          {comments?.map((comment, index) => (\r\n            <div key={index} className=\"media\">\r\n              <div className=\"media-body\">\r\n                <div className=\"media-heading\">\r\n                  {comment.attributes.author}\r\n                  <span className=\"divider\">|</span>{\" \"}\r\n                  <span className=\"light-gray\">{`${new Date(\r\n                    comment.attributes.updatedAt\r\n                  )\r\n                    .toString()\r\n                    .split(\" \")\r\n                    .slice(0, 5)\r\n                    .join(\" \")}`}</span>\r\n                </div>\r\n                <p>{comment.attributes.message}</p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"post-comment-add\">\r\n          <div className=\"block-title\">\r\n            <h3>Leave a Comment</h3>\r\n          </div>\r\n          <form className=\"form-add-comment\" onSubmit={handleCommentSubmission}>\r\n            <div className=\"form-group form-group-with-icon\">\r\n              <i className=\"fa fa-user\"></i>\r\n              <input\r\n                className=\"form-control\"\r\n                placeholder=\"Your Name\"\r\n                name=\"name\"\r\n                required\r\n              />\r\n              <div className=\"form-control-border\"></div>\r\n            </div>\r\n            <div className=\"form-group form-group-with-icon\">\r\n              <i className=\"fa fa-comment\"></i>\r\n              <textarea\r\n                className=\"form-control\"\r\n                placeholder=\"Message\"\r\n                name=\"message\"\r\n                required\r\n              ></textarea>\r\n              <div className=\"form-control-border\"></div>\r\n            </div>\r\n            <button className=\"button\" type=\"submit\">\r\n              Add comment\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export const getDateFromISO = (isoTimestamp) => {\r\n  return new Date(isoTimestamp).toLocaleString().split(\",\")[0];\r\n};\r\n","import { Link } from \"react-router-dom\";\r\nimport { getDateFromISO } from \"../utility/DateTimeHelper\";\r\n\r\nconst Viewport = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      {props.data &&\r\n        props.data?.map((review) => (\r\n          <div key={review.id} className=\"card\">\r\n            <div className=\"card__header\">\r\n              <img\r\n                src={`${review.attributes.image.data.attributes.url}`}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div className=\"card__body\">\r\n              <div>\r\n                {review.attributes.categories.data?.map((category, index) => (\r\n                  <span key={index} className=\"tag tag-red\">\r\n                    {category.attributes.name}\r\n                  </span>\r\n                ))}\r\n              </div>\r\n              <h4>{review.attributes.title}</h4>\r\n              <p>{review.attributes.body.substring(0, 200)}...</p>\r\n              <Link to={`/details/${review.id}`}>Read more</Link>\r\n            </div>\r\n            <div className=\"card__footer\">\r\n              <div className=\"user\">\r\n                <img\r\n                  src={`${review.attributes.avatar.data.attributes.url}`}\r\n                  className=\"user__image\"\r\n                  width=\"40\"\r\n                  height=\"40\"\r\n                  alt=\"\"\r\n                />\r\n                <div className=\"user__info\">\r\n                  <h5>{review.attributes.author}</h5>\r\n                  <small>{getDateFromISO(review.attributes.updatedAt)}</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Viewport;\r\n","import { useParams } from \"react-router-dom\";\r\nimport Viewport from \"../components/Viewport\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport { URL } from \"../utility/Constants\";\r\n\r\nexport default function Category() {\r\n  const qs = require(\"qs\");\r\n  const query = qs.stringify(\r\n    {\r\n      populate: {\r\n        reviews: {\r\n          populate: \"*\",\r\n        },\r\n      },\r\n    },\r\n    {\r\n      encodeValuesOnly: true,\r\n    }\r\n  );\r\n\r\n  const { id } = useParams();\r\n\r\n  const { loading, error, data } = useFetch(\r\n    `${URL}/api/categories/${id}?${query}`\r\n  );\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  return <Viewport data={data.attributes.reviews.data} />;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport { URL } from \"../utility/Constants\";\r\n\r\nconst SiteHeader = () => {\r\n  const { loading, error, data } = useFetch(`${URL}/api/categories`);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  return (\r\n    <div className=\"site-header\">\r\n      <Link to=\"/\">\r\n        <h1>Strapi Blogging</h1>\r\n      </Link>\r\n\r\n      <nav className=\"categories\">\r\n        <Link to=\"/dashboard\" className=\"dashboard\">\r\n          Dashboard\r\n        </Link>\r\n        <span>Filter reviews by category:</span>\r\n\r\n        {data?.map((category) => (\r\n          <Link key={category.id} to={`/category/${category.id}`}>\r\n            {category.attributes.name}\r\n          </Link>\r\n        ))}\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SiteHeader;\r\n","import Viewport from \"../components/Viewport\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport { URL } from \"../utility/Constants\";\r\n\r\nexport default function Dashboard() {\r\n  const { loading, error, data } = useFetch(`${URL}/api/reviews?populate=*`);\r\n\r\n  if (loading) return <p>Loading...</p>;\r\n\r\n  if (error) return <p>Error :(</p>;\r\n\r\n  return <Viewport data={data} />;\r\n}\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport ReviewDetails from \"./pages/ReviewDetails\";\r\nimport Category from \"./pages/Category\";\r\nimport SiteHeader from \"./components/SiteHeader\";\r\nimport Dashboard from \"./pages/Dashboard\";\r\n\r\nfunction App() {\r\n  const routerBaseName = process.env.PUBLIC_URL;\r\n\r\n  return (\r\n    <Router basename={routerBaseName}>\r\n      <div className=\"App\">\r\n        <SiteHeader />\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n          <Route path=\"/dashboard\">\r\n            <Dashboard />\r\n          </Route>\r\n          <Route path=\"/details/:id\">\r\n            <ReviewDetails />\r\n          </Route>\r\n          <Route path=\"/category/:id\">\r\n            <Category />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./styles/index.scss\";\r\nimport App from \"./App\";\r\nimport {\r\n  applyPolyfills,\r\n  defineCustomElements,\r\n} from \"ethan-reusable-components/loader\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\napplyPolyfills().then(() => {\r\n  defineCustomElements(window);\r\n});\r\n"],"sourceRoot":""}